/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {

        if(head == NULL || head->next == NULL){
            return false;
        }

        ListNode *fast,*slow;
        fast = head;
        slow = head;

        do{
            if(fast->next->next == NULL){
                return false;
            }
            fast = fast->next->next;
            slow = slow->next;
            if(fast->next == NULL){
                return false;
            }
        }while(fast != slow);
        
        if(fast == slow){
            return true;
        }else{
            return false;
        }
    }
};
