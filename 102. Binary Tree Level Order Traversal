/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>>output;

    vector<vector<int>> levelOrder(TreeNode* root) {
        level(root);
        return output;
    }

    void level(TreeNode* root){
        queue<TreeNode*>q;
        vector<int>temp;
        if(root == NULL){
            return;
        }

        if(root->left == NULL && root->right == NULL){
            temp.clear();
            temp.push_back(root->val);
            output.push_back(temp);
            return;
        }
        q.push(root);
        q.push(NULL);
        

        temp.clear();

        while(q.size() > 0){
            TreeNode* curr = q.front();
            q.pop();

            if(curr == NULL){
                if(!q.empty()){
                     output.push_back(temp);
                     temp.clear();
                     q.push(NULL);
                     continue;
                }else{
                    break;
                }
            }

            temp.push_back(curr->val);

            if(curr->left != NULL){
                q.push(curr->left);
            }

            if(curr->right != NULL){
                q.push(curr->right);
            }
        }
        output.push_back(temp);
        temp.clear();
    }
};
