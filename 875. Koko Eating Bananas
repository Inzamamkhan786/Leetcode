class Solution {
public:
    int minEatingSpeed(vector<int>& piles, int h) {
      int max = *max_element(piles.begin(),piles.end());
      long long a;
      int left = 1;
      int right = max;

      while(left <= right){
        int mid = left + ((right - left)/2);
        long long hours = 0;
        for(int i = 0; i < piles.size(); i++){
            hours = hours + (long long)ceil((double)piles[i]/mid);
        }
        if(hours <= h){
            a = mid;
            right = mid - 1;
        }else if(hours > h){
            left = mid + 1;
        }
      }
      return a;
    }
};
